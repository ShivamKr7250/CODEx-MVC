// <auto-generated />
using System;
using CODEx.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CODEx.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231022170712_AddEventsToDb")]
    partial class AddEventsToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CODEx.Model.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalParticipant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(1, 1, 1),
                            Description = "This was a Technical Event",
                            Name = "Da-Vinci Code 3.0",
                            TotalParticipant = 70
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(1, 1, 1),
                            Description = "This was a Technical Event",
                            Name = "X-QuizIT 3.0",
                            TotalParticipant = 90
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(1, 1, 1),
                            Description = "This was a Technical Event",
                            Name = "Edge Map ",
                            TotalParticipant = 60
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(1, 1, 1),
                            Description = "This was a Technical Event",
                            Name = "TechNode",
                            TotalParticipant = 120
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
